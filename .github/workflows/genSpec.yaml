name: Generate OpenApi Spec

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  spec_gen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout spec
        uses: actions/checkout@v2

      - name: Validate spec
        uses: mpetrunic/swagger-cli-action@v1.0.0
        with:
          command: "validate spec/xatal.yaml"

      - name: Build spec
        uses: mpetrunic/swagger-cli-action@v1.0.0
        with:
          command: "bundle -o spec.yaml -t yaml spec/xatal.yaml"

      - name: Publish spec
        uses: Legion2/swagger-ui-action@v1
        with:
          output: specs
          spec-file: spec.yaml

      - name: Deploy to GH Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.EDSON_PERSONAL_TOKEN }}
          publish_dir: specs

  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.EDSON_DOCKERHUB_ID }}
          password: ${{ secrets.EDSON_DOCKERHUB_TOKEN }}

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v1

      - name: Configurar buildx
        uses: docker/setup-buildx-action@v1

      - name: Obtener version del servicio
        uses: SebRollen/toml-action@v1.0.0
        id: pVersion
        with:
          file: 'project.toml'
          field: 'version'

      - name: Construir con buildx
        env:
          tag: w3edd/xatal_b:${{ steps.pVersion.outputs.value }}
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ env.tag }}
          platforms: linux/amd64
          outputs: type=docker,dest=/tmp/image.tar

      - name: Guardar imagen
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: /tmp/image.tar

  publish_image:
    runs-on: ubuntu-latest
    needs: [ spec_gen, build_image ]
    steps:
      - name: Configurar Buildx
        uses: docker/setup-buildx-action@v1

      - name: Descargar imagen local
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp

      - name: Obtener version del servicio
        uses: SebRollen/toml-action@v1.0.0
        id: pVersion
        with:
          file: 'project.toml'
          field: 'version'

      - name: Cargar imagen de docker local
        run: docker load --input /tmp/image.tar

      - name: Push image to DockerHub
        env:
          tag: w3edd/xatal_b:${{ steps.pVersion.outputs.value }}
        run: |
          docker push $tag
