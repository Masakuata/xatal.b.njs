openapi: 3.0.0
info:
  title: Xatal
  description: Xatal backend service
  version: 0.0.1
servers:
  - url: 'http://clayrite.ddns.net:42110'
    description: Development server
paths:
  /user:
    summary: Endpoint to perform operations against users
    description: Create and fetch users for the main xatal web service
    post:
      summary: Create a new user on the system
      description: Make a request and provide the required information to create a new user
      tags:
        - User Catalog
      requestBody:
        description: Information required to register a new user
        content:
          application/json:
            schema:
              type: object
              title: User to register
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  title: Full user name
                  description: The full name of the user to be registered
                  maxLength: 100
                  minLength: 5
                  example: John Doe Martinez
                email:
                  type: string
                  title: User email address
                  description: The email address of the user to be registered
                  maxLength: 320
                  minLength: 5
                  format: email
                  example: johndm@cutemail.com
                password:
                  type: string
                  title: User password
                  description: The secret password of the user to be registered
                  maxLength: 40
                  minLength: 8
                  example: secretPassw0rd
      responses:
        '201':
          description: The request was correctly processed and the new user was registered
          content:
            application/json:
              schema:
                $ref: '#/paths/~1user~1%7Bid%7D/get/responses/200/content/application~1json/schema'
        '400':
          description: The request is wrong or malformed and cannot be performed
        '406':
          description: The request is unacceptable due to missing or invalid values
        '409':
          description: This email is already registered on another user
  '/user/{id}':
    summary: 'Fetch, update and delete specific users'
    description: Perform operations against users already registered on the system
    get:
      summary: Fetch information about a specific user identified by its id
      description: Retrieve all the information about one specific user
      tags:
        - User
      parameters:
        - name: id
          schema:
            type: integer
            minimum: 1
            example: 25
          in: path
          required: true
      responses:
        '200':
          description: The user was found and its information sent
          content:
            application/json:
              schema:
                type: object
                title: User already registered
                required:
                  - id
                properties:
                  id:
                    type: integer
                    title: User id
                    description: An integer used as discriminator of one specific registered user
                    minimum: 1
                    example: 25
                  status:
                    type: integer
                    title: Status of the user on the system
                    example: 1
                allOf:
                  - $ref: '#/paths/~1user/post/requestBody/content/application~1json/schema'
        '400':
          description: The request is wrong or malformed and cannot be processed
        '404':
          description: This id is not associated to any registered user
        '406':
          description: The request is unacceptable due to missing or invalid values
    patch:
      summary: Update one user's information
      description: Update the information of one specific user identified by its id
      tags:
        - User
      parameters:
        - name: id
          schema:
            type: integer
            minimum: 1
            example: 25
          in: path
          required: true
      responses:
        '200':
          description: The user was found and its information updated
          content:
            application/json:
              schema:
                $ref: '#/paths/~1user~1%7Bid%7D/get/responses/200/content/application~1json/schema'
        '400':
          description: The request is wrong or malformed and cannot be processed
        '404':
          description: This id is not associated to any registered user
        '406':
          description: The request is unacceptable due to missing or invalid values
    delete:
      summary: Delete a user from the system
      description: Remove all the information of one specific user
      tags:
        - User
      parameters:
        - name: id
          schema:
            type: integer
            minimum: 1
            example: 25
          in: path
          required: true
      responses:
        '204':
          description: The user was found and its information deleted permanently
        '400':
          description: The request is wrong or malformed and cannot be performed
        '404':
          description: This id is not associated to any registered user
